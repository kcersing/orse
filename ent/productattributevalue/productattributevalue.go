// Code generated by entc, DO NOT EDIT.

package productattributevalue

import (
	"time"
)

const (
	// Label holds the string label denoting the productattributevalue type in the database.
	Label = "product_attribute_value"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldKeyID holds the string denoting the key_id field in the database.
	FieldKeyID = "key_id"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// EdgeKey holds the string denoting the key edge name in mutations.
	EdgeKey = "key"
	// EdgeItems holds the string denoting the items edge name in mutations.
	EdgeItems = "items"
	// Table holds the table name of the productattributevalue in the database.
	Table = "product_attribute_value"
	// KeyTable is the table that holds the key relation/edge.
	KeyTable = "product_attribute_value"
	// KeyInverseTable is the table name for the ProductAttributeKey entity.
	// It exists in this package in order to avoid circular dependency with the "productattributekey" package.
	KeyInverseTable = "product_attribute_key"
	// KeyColumn is the table column denoting the key relation/edge.
	KeyColumn = "key_id"
	// ItemsTable is the table that holds the items relation/edge. The primary key declared below.
	ItemsTable = "product_specs_item_values"
	// ItemsInverseTable is the table name for the ProductSpecsItem entity.
	// It exists in this package in order to avoid circular dependency with the "productspecsitem" package.
	ItemsInverseTable = "product_specs_item"
)

// Columns holds all SQL columns for productattributevalue fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldKeyID,
	FieldValue,
	FieldSort,
}

var (
	// ItemsPrimaryKey and ItemsColumn2 are the table columns denoting the
	// primary key for the items relation (M2M).
	ItemsPrimaryKey = []string{"product_specs_item_id", "product_attribute_value_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)
