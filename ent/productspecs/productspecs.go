// Code generated by entc, DO NOT EDIT.

package productspecs

import (
	"time"
)

const (
	// Label holds the string label denoting the productspecs type in the database.
	Label = "product_specs"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldProductID holds the string denoting the product_id field in the database.
	FieldProductID = "product_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSn holds the string denoting the sn field in the database.
	FieldSn = "sn"
	// FieldStock holds the string denoting the stock field in the database.
	FieldStock = "stock"
	// FieldSales holds the string denoting the sales field in the database.
	FieldSales = "sales"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldSalePrice holds the string denoting the sale_price field in the database.
	FieldSalePrice = "sale_price"
	// FieldCreateID holds the string denoting the create_id field in the database.
	FieldCreateID = "create_id"
	// EdgeProduct holds the string denoting the product edge name in mutations.
	EdgeProduct = "product"
	// EdgeItems holds the string denoting the items edge name in mutations.
	EdgeItems = "items"
	// Table holds the table name of the productspecs in the database.
	Table = "product_specs"
	// ProductTable is the table that holds the product relation/edge.
	ProductTable = "product_specs"
	// ProductInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductInverseTable = "product"
	// ProductColumn is the table column denoting the product relation/edge.
	ProductColumn = "product_id"
	// ItemsTable is the table that holds the items relation/edge.
	ItemsTable = "product_specs_item"
	// ItemsInverseTable is the table name for the ProductSpecsItem entity.
	// It exists in this package in order to avoid circular dependency with the "productspecsitem" package.
	ItemsInverseTable = "product_specs_item"
	// ItemsColumn is the table column denoting the items relation/edge.
	ItemsColumn = "product_specs_id"
)

// Columns holds all SQL columns for productspecs fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldProductID,
	FieldName,
	FieldSn,
	FieldStock,
	FieldSales,
	FieldPrice,
	FieldSalePrice,
	FieldCreateID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreateID holds the default value on creation for the "create_id" field.
	DefaultCreateID int
)
