// Code generated by entc, DO NOT EDIT.

package orderitem

import (
	"time"
)

const (
	// Label holds the string label denoting the orderitem type in the database.
	Label = "order_item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldSn holds the string denoting the sn field in the database.
	FieldSn = "sn"
	// FieldProductCateID holds the string denoting the product_cate_id field in the database.
	FieldProductCateID = "product_cate_id"
	// FieldProductID holds the string denoting the product_id field in the database.
	FieldProductID = "product_id"
	// FieldProductPic holds the string denoting the product_pic field in the database.
	FieldProductPic = "product_pic"
	// FieldProductName holds the string denoting the product_name field in the database.
	FieldProductName = "product_name"
	// FieldProductSn holds the string denoting the product_sn field in the database.
	FieldProductSn = "product_sn"
	// FieldProductPrice holds the string denoting the product_price field in the database.
	FieldProductPrice = "product_price"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldProductSpecsID holds the string denoting the product_specs_id field in the database.
	FieldProductSpecsID = "product_specs_id"
	// FieldProductSpecsSn holds the string denoting the product_specs_sn field in the database.
	FieldProductSpecsSn = "product_specs_sn"
	// FieldProductSpecsAttr holds the string denoting the product_specs_attr field in the database.
	FieldProductSpecsAttr = "product_specs_attr"
	// EdgeOrder holds the string denoting the order edge name in mutations.
	EdgeOrder = "order"
	// Table holds the table name of the orderitem in the database.
	Table = "order_pay"
	// OrderTable is the table that holds the order relation/edge.
	OrderTable = "order_pay"
	// OrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrderInverseTable = "order"
	// OrderColumn is the table column denoting the order relation/edge.
	OrderColumn = "order_id"
)

// Columns holds all SQL columns for orderitem fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldOrderID,
	FieldSn,
	FieldProductCateID,
	FieldProductID,
	FieldProductPic,
	FieldProductName,
	FieldProductSn,
	FieldProductPrice,
	FieldQuantity,
	FieldProductSpecsID,
	FieldProductSpecsSn,
	FieldProductSpecsAttr,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultProductPrice holds the default value on creation for the "product_price" field.
	DefaultProductPrice float64
)
