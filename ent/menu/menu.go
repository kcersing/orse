// Code generated by entc, DO NOT EDIT.

package menu

import (
	"fmt"
	"orse/ent/property"
	"time"
)

const (
	// Label holds the string label denoting the menu type in the database.
	Label = "menu"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldParentID holds the string denoting the parent_id field in the database.
	FieldParentID = "parent_id"
	// FieldTree holds the string denoting the tree field in the database.
	FieldTree = "tree"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldIcon holds the string denoting the icon field in the database.
	FieldIcon = "icon"
	// FieldHidden holds the string denoting the hidden field in the database.
	FieldHidden = "hidden"
	// FieldDesc holds the string denoting the desc field in the database.
	FieldDesc = "desc"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// Table holds the table name of the menu in the database.
	Table = "menu"
	// ParentTable is the table that holds the parent relation/edge.
	ParentTable = "menu"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "parent_id"
	// ChildrenTable is the table that holds the children relation/edge.
	ChildrenTable = "menu"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "parent_id"
)

// Columns holds all SQL columns for menu fields.
var Columns = []string{
	FieldID,
	FieldParentID,
	FieldTree,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldTitle,
	FieldName,
	FieldURL,
	FieldLevel,
	FieldSort,
	FieldStatus,
	FieldIcon,
	FieldHidden,
	FieldDesc,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultLevel holds the default value on creation for the "level" field.
	DefaultLevel int
	// DefaultSort holds the default value on creation for the "sort" field.
	DefaultSort int
)

// StatusValidator is a validator for the "status" field enum values. It is called by the builders before save.
func StatusValidator(s property.Status) error {
	switch s {
	case "0", "1":
		return nil
	default:
		return fmt.Errorf("menu: invalid enum value for status field: %q", s)
	}
}

// HiddenValidator is a validator for the "hidden" field enum values. It is called by the builders before save.
func HiddenValidator(h property.Status) error {
	switch h {
	case "0", "1":
		return nil
	default:
		return fmt.Errorf("menu: invalid enum value for hidden field: %q", h)
	}
}
