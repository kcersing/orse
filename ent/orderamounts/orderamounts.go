// Code generated by entc, DO NOT EDIT.

package orderamounts

import (
	"time"
)

const (
	// Label holds the string label denoting the orderamounts type in the database.
	Label = "order_amounts"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldOrderID holds the string denoting the order_id field in the database.
	FieldOrderID = "order_id"
	// FieldTotalAmount holds the string denoting the total_amount field in the database.
	FieldTotalAmount = "total_amount"
	// FieldPayAmount holds the string denoting the pay_amount field in the database.
	FieldPayAmount = "pay_amount"
	// FieldFreightAmount holds the string denoting the freight_amount field in the database.
	FieldFreightAmount = "freight_amount"
	// FieldPromotionAmount holds the string denoting the promotion_amount field in the database.
	FieldPromotionAmount = "promotion_amount"
	// FieldIntegrationAmount holds the string denoting the integration_amount field in the database.
	FieldIntegrationAmount = "integration_amount"
	// FieldCouponID holds the string denoting the coupon_id field in the database.
	FieldCouponID = "coupon_id"
	// FieldCouponAmount holds the string denoting the coupon_amount field in the database.
	FieldCouponAmount = "coupon_amount"
	// FieldDiscountAmount holds the string denoting the discount_amount field in the database.
	FieldDiscountAmount = "discount_amount"
	// EdgeOrder holds the string denoting the order edge name in mutations.
	EdgeOrder = "order"
	// Table holds the table name of the orderamounts in the database.
	Table = "order_amounts"
	// OrderTable is the table that holds the order relation/edge.
	OrderTable = "order_amounts"
	// OrderInverseTable is the table name for the Order entity.
	// It exists in this package in order to avoid circular dependency with the "order" package.
	OrderInverseTable = "order"
	// OrderColumn is the table column denoting the order relation/edge.
	OrderColumn = "order_id"
)

// Columns holds all SQL columns for orderamounts fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldOrderID,
	FieldTotalAmount,
	FieldPayAmount,
	FieldFreightAmount,
	FieldPromotionAmount,
	FieldIntegrationAmount,
	FieldCouponID,
	FieldCouponAmount,
	FieldDiscountAmount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultTotalAmount holds the default value on creation for the "total_amount" field.
	DefaultTotalAmount float64
	// DefaultPayAmount holds the default value on creation for the "pay_amount" field.
	DefaultPayAmount float64
	// DefaultFreightAmount holds the default value on creation for the "freight_amount" field.
	DefaultFreightAmount float64
	// DefaultPromotionAmount holds the default value on creation for the "promotion_amount" field.
	DefaultPromotionAmount float64
	// DefaultIntegrationAmount holds the default value on creation for the "integration_amount" field.
	DefaultIntegrationAmount float64
	// DefaultCouponAmount holds the default value on creation for the "coupon_amount" field.
	DefaultCouponAmount float64
	// DefaultDiscountAmount holds the default value on creation for the "discount_amount" field.
	DefaultDiscountAmount float64
)
