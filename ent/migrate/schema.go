// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MenuColumns holds the columns for the "menu" table.
	MenuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "level", Type: field.TypeInt, Default: 1},
		{Name: "sort", Type: field.TypeInt, Default: 1},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"0", "1"}},
		{Name: "icon", Type: field.TypeString, Nullable: true},
		{Name: "hidden", Type: field.TypeEnum, Nullable: true, Enums: []string{"0", "1"}},
		{Name: "desc", Type: field.TypeString, Nullable: true},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
	}
	// MenuTable holds the schema information for the "menu" table.
	MenuTable = &schema.Table{
		Name:       "menu",
		Columns:    MenuColumns,
		PrimaryKey: []*schema.Column{MenuColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "menu_menu_children",
				Columns:    []*schema.Column{MenuColumns[12]},
				RefColumns: []*schema.Column{MenuColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "menu_url",
				Unique:  false,
				Columns: []*schema.Column{MenuColumns[5]},
			},
			{
				Name:    "menu_id",
				Unique:  true,
				Columns: []*schema.Column{MenuColumns[0]},
			},
		},
	}
	// OrderColumns holds the columns for the "order" table.
	OrderColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "sn", Type: field.TypeString, Unique: true},
		{Name: "source", Type: field.TypeEnum, Nullable: true, Enums: []string{"0", "1"}, Default: "0"},
		{Name: "status", Type: field.TypeEnum, Nullable: true, Enums: []string{"0", "10", "20", "30", "40"}, Default: "0"},
		{Name: "integration", Type: field.TypeInt},
		{Name: "payment_time", Type: field.TypeTime, Nullable: true},
		{Name: "note", Type: field.TypeString, Unique: true},
		{Name: "comment_time", Type: field.TypeTime, Nullable: true},
		{Name: "delete", Type: field.TypeEnum, Nullable: true, Enums: []string{"0", "1"}, Default: "0"},
	}
	// OrderTable holds the schema information for the "order" table.
	OrderTable = &schema.Table{
		Name:       "order",
		Columns:    OrderColumns,
		PrimaryKey: []*schema.Column{OrderColumns[0]},
	}
	// OrderAmountsColumns holds the columns for the "order_amounts" table.
	OrderAmountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "total_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "pay_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "freight_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "promotion_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "integration_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "coupon_id", Type: field.TypeInt, Nullable: true},
		{Name: "coupon_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "discount_amount", Type: field.TypeFloat64, Default: 0},
		{Name: "order_id", Type: field.TypeInt, Nullable: true},
	}
	// OrderAmountsTable holds the schema information for the "order_amounts" table.
	OrderAmountsTable = &schema.Table{
		Name:       "order_amounts",
		Columns:    OrderAmountsColumns,
		PrimaryKey: []*schema.Column{OrderAmountsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_amounts_order_amounts",
				Columns:    []*schema.Column{OrderAmountsColumns[11]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderDeliveryColumns holds the columns for the "order_delivery" table.
	OrderDeliveryColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "sn", Type: field.TypeString, Unique: true},
		{Name: "delivery_company", Type: field.TypeString, Nullable: true},
		{Name: "delivery_time", Type: field.TypeTime, Nullable: true},
		{Name: "receiver_name", Type: field.TypeString, Nullable: true},
		{Name: "receiver_phone", Type: field.TypeString, Nullable: true},
		{Name: "receiver_post_code", Type: field.TypeString, Nullable: true},
		{Name: "receiver_province", Type: field.TypeString, Nullable: true},
		{Name: "receiver_city", Type: field.TypeString, Nullable: true},
		{Name: "receiver_region", Type: field.TypeString, Nullable: true},
		{Name: "receiver_detail_address", Type: field.TypeString, Nullable: true},
		{Name: "receive_time", Type: field.TypeTime, Nullable: true},
		{Name: "order_id", Type: field.TypeInt, Nullable: true},
	}
	// OrderDeliveryTable holds the schema information for the "order_delivery" table.
	OrderDeliveryTable = &schema.Table{
		Name:       "order_delivery",
		Columns:    OrderDeliveryColumns,
		PrimaryKey: []*schema.Column{OrderDeliveryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_delivery_order_deliverys",
				Columns:    []*schema.Column{OrderDeliveryColumns[14]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemColumns holds the columns for the "order_item" table.
	OrderItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "sn", Type: field.TypeString, Unique: true},
		{Name: "product_cate_id", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt},
		{Name: "product_pic", Type: field.TypeString},
		{Name: "product_name", Type: field.TypeString},
		{Name: "product_sn", Type: field.TypeInt},
		{Name: "product_price", Type: field.TypeFloat64, Default: 0},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "product_specs_id", Type: field.TypeInt},
		{Name: "product_specs_sn", Type: field.TypeString},
		{Name: "product_specs_attr", Type: field.TypeString},
		{Name: "order_id", Type: field.TypeInt, Nullable: true},
	}
	// OrderItemTable holds the schema information for the "order_item" table.
	OrderItemTable = &schema.Table{
		Name:       "order_item",
		Columns:    OrderItemColumns,
		PrimaryKey: []*schema.Column{OrderItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_item_order_items",
				Columns:    []*schema.Column{OrderItemColumns[14]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderPayColumns holds the columns for the "order_pay" table.
	OrderPayColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "sn", Type: field.TypeString, Unique: true},
		{Name: "price", Type: field.TypeFloat64, Default: 0},
		{Name: "pay_mode", Type: field.TypeString, Nullable: true},
		{Name: "order_id", Type: field.TypeInt, Nullable: true},
	}
	// OrderPayTable holds the schema information for the "order_pay" table.
	OrderPayTable = &schema.Table{
		Name:       "order_pay",
		Columns:    OrderPayColumns,
		PrimaryKey: []*schema.Column{OrderPayColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_pay_order_pays",
				Columns:    []*schema.Column{OrderPayColumns[7]},
				RefColumns: []*schema.Column{OrderColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderSettingColumns holds the columns for the "order_setting" table.
	OrderSettingColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "order_overtime", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "confirm_overtime", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "finish_overtime", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "comment_overtime", Type: field.TypeInt, Nullable: true, Default: 0},
	}
	// OrderSettingTable holds the schema information for the "order_setting" table.
	OrderSettingTable = &schema.Table{
		Name:       "order_setting",
		Columns:    OrderSettingColumns,
		PrimaryKey: []*schema.Column{OrderSettingColumns[0]},
	}
	// ProductColumns holds the columns for the "product" table.
	ProductColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"0", "1"}},
		{Name: "create_id", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "cate_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductTable holds the schema information for the "product" table.
	ProductTable = &schema.Table{
		Name:       "product",
		Columns:    ProductColumns,
		PrimaryKey: []*schema.Column{ProductColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_product_cate_products",
				Columns:    []*schema.Column{ProductColumns[6]},
				RefColumns: []*schema.Column{ProductCateColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductAttributeKeyColumns holds the columns for the "product_attribute_key" table.
	ProductAttributeKeyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt},
	}
	// ProductAttributeKeyTable holds the schema information for the "product_attribute_key" table.
	ProductAttributeKeyTable = &schema.Table{
		Name:       "product_attribute_key",
		Columns:    ProductAttributeKeyColumns,
		PrimaryKey: []*schema.Column{ProductAttributeKeyColumns[0]},
	}
	// ProductAttributeValueColumns holds the columns for the "product_attribute_value" table.
	ProductAttributeValueColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "value", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt},
		{Name: "key_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductAttributeValueTable holds the schema information for the "product_attribute_value" table.
	ProductAttributeValueTable = &schema.Table{
		Name:       "product_attribute_value",
		Columns:    ProductAttributeValueColumns,
		PrimaryKey: []*schema.Column{ProductAttributeValueColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_attribute_value_product_attribute_key_values",
				Columns:    []*schema.Column{ProductAttributeValueColumns[5]},
				RefColumns: []*schema.Column{ProductAttributeKeyColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductCateColumns holds the columns for the "product_cate" table.
	ProductCateColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "sort", Type: field.TypeInt},
	}
	// ProductCateTable holds the schema information for the "product_cate" table.
	ProductCateTable = &schema.Table{
		Name:       "product_cate",
		Columns:    ProductCateColumns,
		PrimaryKey: []*schema.Column{ProductCateColumns[0]},
	}
	// ProductSpecsColumns holds the columns for the "product_specs" table.
	ProductSpecsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "sn", Type: field.TypeString},
		{Name: "stock", Type: field.TypeInt},
		{Name: "sales", Type: field.TypeInt},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "sale_price", Type: field.TypeFloat64},
		{Name: "create_id", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductSpecsTable holds the schema information for the "product_specs" table.
	ProductSpecsTable = &schema.Table{
		Name:       "product_specs",
		Columns:    ProductSpecsColumns,
		PrimaryKey: []*schema.Column{ProductSpecsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_specs_product_specs",
				Columns:    []*schema.Column{ProductSpecsColumns[10]},
				RefColumns: []*schema.Column{ProductColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductSpecsItemColumns holds the columns for the "product_specs_item" table.
	ProductSpecsItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "value_id", Type: field.TypeInt, Nullable: true},
		{Name: "sort", Type: field.TypeInt},
		{Name: "product_specs_id", Type: field.TypeInt, Nullable: true},
	}
	// ProductSpecsItemTable holds the schema information for the "product_specs_item" table.
	ProductSpecsItemTable = &schema.Table{
		Name:       "product_specs_item",
		Columns:    ProductSpecsItemColumns,
		PrimaryKey: []*schema.Column{ProductSpecsItemColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_specs_item_product_specs_items",
				Columns:    []*schema.Column{ProductSpecsItemColumns[5]},
				RefColumns: []*schema.Column{ProductSpecsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "mobile", Type: field.TypeString, Unique: true},
		{Name: "pass", Type: field.TypeString, Nullable: true},
		{Name: "uuid", Type: field.TypeUUID},
		{Name: "active", Type: field.TypeBool, Default: false},
		{Name: "state", Type: field.TypeEnum, Nullable: true, Enums: []string{"on", "off"}},
		{Name: "login", Type: field.TypeTime},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_id",
				Unique:  true,
				Columns: []*schema.Column{UserColumns[0]},
			},
		},
	}
	// UserDetailColumns holds the columns for the "user_detail" table.
	UserDetailColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "age", Type: field.TypeInt, Nullable: true},
		{Name: "rank", Type: field.TypeFloat64, Nullable: true},
		{Name: "pic", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// UserDetailTable holds the schema information for the "user_detail" table.
	UserDetailTable = &schema.Table{
		Name:       "user_detail",
		Columns:    UserDetailColumns,
		PrimaryKey: []*schema.Column{UserDetailColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_detail_user_detail",
				Columns:    []*schema.Column{UserDetailColumns[5]},
				RefColumns: []*schema.Column{UserColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userdetail_id",
				Unique:  true,
				Columns: []*schema.Column{UserDetailColumns[0]},
			},
		},
	}
	// ProductSpecsItemValuesColumns holds the columns for the "product_specs_item_values" table.
	ProductSpecsItemValuesColumns = []*schema.Column{
		{Name: "product_specs_item_id", Type: field.TypeInt},
		{Name: "product_attribute_value_id", Type: field.TypeInt},
	}
	// ProductSpecsItemValuesTable holds the schema information for the "product_specs_item_values" table.
	ProductSpecsItemValuesTable = &schema.Table{
		Name:       "product_specs_item_values",
		Columns:    ProductSpecsItemValuesColumns,
		PrimaryKey: []*schema.Column{ProductSpecsItemValuesColumns[0], ProductSpecsItemValuesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_specs_item_values_product_specs_item_id",
				Columns:    []*schema.Column{ProductSpecsItemValuesColumns[0]},
				RefColumns: []*schema.Column{ProductSpecsItemColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_specs_item_values_product_attribute_value_id",
				Columns:    []*schema.Column{ProductSpecsItemValuesColumns[1]},
				RefColumns: []*schema.Column{ProductAttributeValueColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MenuTable,
		OrderTable,
		OrderAmountsTable,
		OrderDeliveryTable,
		OrderItemTable,
		OrderPayTable,
		OrderSettingTable,
		ProductTable,
		ProductAttributeKeyTable,
		ProductAttributeValueTable,
		ProductCateTable,
		ProductSpecsTable,
		ProductSpecsItemTable,
		UserTable,
		UserDetailTable,
		ProductSpecsItemValuesTable,
	}
)

func init() {
	MenuTable.ForeignKeys[0].RefTable = MenuTable
	MenuTable.Annotation = &entsql.Annotation{
		Table: "menu",
	}
	OrderAmountsTable.ForeignKeys[0].RefTable = OrderTable
	OrderDeliveryTable.ForeignKeys[0].RefTable = OrderTable
	OrderItemTable.ForeignKeys[0].RefTable = OrderTable
	OrderPayTable.ForeignKeys[0].RefTable = OrderTable
	ProductTable.ForeignKeys[0].RefTable = ProductCateTable
	ProductAttributeValueTable.ForeignKeys[0].RefTable = ProductAttributeKeyTable
	ProductSpecsTable.ForeignKeys[0].RefTable = ProductTable
	ProductSpecsItemTable.ForeignKeys[0].RefTable = ProductSpecsTable
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
	UserDetailTable.ForeignKeys[0].RefTable = UserTable
	UserDetailTable.Annotation = &entsql.Annotation{
		Table: "user_detail",
	}
	ProductSpecsItemValuesTable.ForeignKeys[0].RefTable = ProductSpecsItemTable
	ProductSpecsItemValuesTable.ForeignKeys[1].RefTable = ProductAttributeValueTable
}
